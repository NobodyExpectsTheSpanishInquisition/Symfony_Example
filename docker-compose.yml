version: '3.8'

services:
  db:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile.postgres
      args:
        - POSTGRES_IMAGE_TAG=${POSTGRES_IMAGE_TAG}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${POSTGRES_EXTERNAL_PORT}:${POSTGRES_INTERNAL_PORT}
    container_name: ${POSTGRES_CONTAINER_NAME}

  db-test:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile.postgres
      args:
        - POSTGRES_IMAGE_TAG=${POSTGRES_IMAGE_TAG}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_DB=${POSTGRES_DB_TEST}
    ports:
      - ${POSTGRES_TEST_EXTERNAL_PORT}:${POSTGRES_TEST_INTERNAL_PORT}
    container_name: ${POSTGRES_TEST_CONTAINER_NAME}

  symfony:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile.symfony
      args:
        - PHP_IMAGE_TAG=${PHP_IMAGE_TAG}
    container_name: ${SYMFONY_APP_CONTAINER_NAME}
    volumes:
      - ${SYMFONY_APP_SOURCE_VOLUME}:${SYMFONY_APP_TARGET_VOLUME}:${SYMFONY_APP_VOLUME_MODE}
    depends_on:
      - db
      - db-test

  nginx:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile.nginx
      args:
        - NGINX_IMAGE_TAG=${NGINX_IMAGE_TAG}
    ports:
      - ${NGINX_SYMFONY_APP_EXTERNAL_PORT}:${NGINX_SYMFONY_APP_INTERNAL_PORT}
    depends_on:
      - symfony
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - ${SYMFONY_APP_SOURCE_VOLUME}:${NGINX_SYMFONY_APP_TARGET_VOLUME_PATH}:${NGINX_SYMFONY_APP_VOLUME_MODE}
    container_name: ${NGINX_CONTAINER_NAME}